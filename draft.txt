function easyClearArea(grid, row, col, numRows, numCols){
    let count1 = 0;
    for (let [arow, acol] of directions) {
        let ambientRow = row + arow;
        let ambientCol = col + acol;
        if (ambientRow < 0 || ambientRow >= numRows || ambientCol < 0 || ambientCol >= numCols) {
            continue;
        }
            // 遍历每个方向数值，
        if (grid[ambientRow][ambientCol].count === -1) {
            console.log("danger!", ambientRow, ambientCol);
            count1 += 1;
        }
    }

    if (grid[row][col].color = black) {
        if (grid[row][col].count = count1) {
        searchClearArea(grid, row, col, numRows, numCols)
        }
    }
}

function handler2(){
                        easyClearArea(grid, i, j, numRows, numCols);
                    }

                    cellEl.addEventListener("dblclick", handler2)


<script>
function handler2() {
    alert('Thanks!');
  };

elem.onclick = () => alert("Hello");
elem.addEventListener("click", handler1); 

cellEl.removeEventListener("click", handler2)  
</script>


  <input id="elem" type="button" value="Click me" href=/>
  <script>
    function handler2() {
        alert('Thanks!');
      };
    
    elem.onclick = () => alert("Hello");
    elem.addEventListener("click", handler1); 
    
    cellEl.removeEventListener("click", handler2)  
    </script>













    let btnEl = document.getElementById('div1');       /* 定义变量（从上述属性中提取） */
            // let menuEl = document.getElementById('menu1');
            btnEl.addEventListener('click',(e) => {
                let btnEl = e.target;
                let gpEl = document.getElementById('gamep')
                btnEl.classList.toggle('toggle');        /* 进行点击动作时，button的属性后加toggle */
                gpEl.classList.toggle('hidden');
                // console.log('click!');
            });      


<div id="div1" class='button' >        
    ABC
    <div class='body hidden'>  
    </div> 
  </div>


  gridCell.clear = true;
                    gridCell.cellEl.classList.add("clear");


                    // 在 document 上捕获...
document.addEventListener("hello", function(event) { // (1)
    alert("Hello from " + event.target.tagName); // Hello from H1
  });

  // ...在 elem 上 dispatch！
  let event = new Event("hello", {bubbles: true}); // (2)
  elem.dispatchEvent(event);

  // 在 document 上的处理程序将被激活，并显示消息。


  let grid = initialize(9, 9, 10);


renderBoard(9, 9, grid);


var btns = document.querySelector('.header button');
var mine = null;
var btnkey = 0;
var headerArr = [
    [9,9,10], [16,16,40], [30,30,99]
]
for (let i = 0; i < btnEl.length - 1; i++);
    btns[i].onclick = function(){
        btns[btnkey].className = '';
        this.className = 'active';
        mine = new Mine(...Grades[i]);
        mine.init();

        btnkey = i
    }

btns[0].onclick();
btns[3].onclick = function(){
    mine.init();
}